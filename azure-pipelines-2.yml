trigger:
  - main

variables:
  dockerRegistryServiceConnection: 'fe937229-ba98-4afe-8efc-601bd6d82460'
  azureSubscription: '30c6c3a3-8d8c-490a-acb8-045aca997454'  # Subscription ID
  resourceGroup: 'rg-mi-app'
  location: 'eastus'
  imageRepository: 'justinolmflasktopicos'
  containerRegistry: 'contenedormanualflask.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  dnsLabel: 'justino-api-$(Build.BuildId)'
  containerName: 'justino-container'
  port: '5000'
  managedIdentityClientId: '34062b02-ceb9-4347-9e1c-fa0420150dfc'

stages:
- stage: Build
  displayName: Build and Push
  jobs:
  - job: Build
    displayName: Build Image and Push to ACR
    pool:
      name: Local
    steps:
    - task: Docker@2
      displayName: Build and push Docker image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to ACI
  dependsOn: Build
  jobs:
  - job: DeployACI
    displayName: Deploy container to Azure Container Instance
    pool:
      name: Local
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          # Si ya existe el grupo, comentar esta l√≠nea
          # az group create --name $(resourceGroup) --location $(location)

          # Borrar contenedor anterior (ignorar error si no existe)
          az container delete --resource-group $(resourceGroup) --name $(containerName) --yes --no-wait || true

          # Crear el contenedor con identidad gestionada para autenticar al ACR
          az container create \
            --resource-group $(resourceGroup) \
            --name $(containerName) \
            --image $(containerRegistry)/$(imageRepository):$(tag) \
            --dns-name-label $(dnsLabel) \
            --ports $(port) \
            --assign-identity $(managedIdentityClientId) \
            --location $(location)
